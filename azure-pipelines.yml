trigger:
    branches:
        include:
        - master
        - refs/tags/build*

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:

    - task: UseDotNet@2 
      displayName: ".NET Core 3.1.x"
      inputs:
        version: '3.1.x'
        packageType: sdk
    - script: dotnet build --configuration $(buildConfiguration)
      displayName: 'dotnet build $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: "Test"
      inputs:
        command: test
        projects: 'VBaseProject.Test/VBaseProject.Test.csproj'
        arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:Include="[VBaseProject.*]*" /p:Exclude="[*Test]*"'
    
    - task: codecoveragecomparerbt@1
      inputs:
        codecoveragetarget: '85'
        codecoveragemeasurementmethod: 'Lines'

    - task: DotNetCoreCLI@2
      displayName: "Publish"
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '-r linux-x64 --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true

    - task: PublishBuildArtifacts@1
      displayName: "Upload Artifacts"
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
        artifactName: 'builds'
 

    - task: CopyFilesOverSSH@0
      inputs:
        sshEndpoint: 'Google Cloud'
        sourceFolder: '$(Build.ArtifactStagingDirectory)'
        contents: '**'
        targetFolder: '/home/vanderlan/builds'
        readyTimeout: '20000'

    - task: Docker@2
      inputs:
        containerRegistry: 'Docker'
        repository: 'vbaseprojectapi'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'


